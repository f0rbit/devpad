---
import type { Task } from "../server/tasks";

interface Props {
	code: NonNullable<Task["codebase_tasks"]>;
}

const { code } = Astro.props;

// format <path>:<line>
let _path = "unknown:?";
if (code.file) {
	_path = code.file;
	if (code.line) {
		_path += `:${code.line}`;
	}
}

const build_context = (context: string[]) => {
	if (!context) return null;
	const min_whitespace = context.reduce((acc, line) => {
		if (line.trim() === "") return acc;
		const whitespace = line.match(/^\s*/);
		if (whitespace) {
			return Math.min(acc, whitespace[0].length);
		}
		return acc;
	}, Infinity);

	return context.map(line => line.slice(min_whitespace)).join("\n");
};

const _context = code.context ? build_context(code.context as string[]) : null;

/** @note had to set these to 'any' to avoid type error on <Code /> lang attribute */
let _file_type = "" as any;
if (code.file) {
	const parts = code.file.split(".");
	_file_type = parts[parts.length - 1];
}
---

<div class="flex-col" style="gap: 2px;">
	<div class="flex-row">
		<span>{code.type}</span>
		<span> - </span>
		<code>{path}</code>
	</div>
	{context && <Code code={context} lang={file_type} />}
</div>
