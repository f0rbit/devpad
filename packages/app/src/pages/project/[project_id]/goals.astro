---
import PageLayout from '@/layouts/PageLayout.astro';
import { createServerApiClient } from '@/utils/api-client';

const { project_id } = Astro.params;

if (!project_id) {
	return Astro.redirect('/404');
}

// Get API client with authentication
let apiClient;
try {
	const jwtToken = Astro.cookies.get("jwt-token")?.value;
	if (!jwtToken) {
		return Astro.redirect('/auth/login');
	}
	apiClient = createServerApiClient({ jwtToken });
} catch (error) {
	console.error("Failed to create API client:", error);
	return Astro.redirect('/auth/login');
}

// Fetch project details
let project;
try {
	// Use the correct API client method to get project by ID
	const response = await fetch(`/api/v0/projects?id=${project_id}`, {
		headers: {
			'Cookie': Astro.request.headers.get('cookie') || ''
		}
	});
	if (response.ok) {
		project = await response.json();
	} else {
		project = null;
	}
} catch (error) {
	console.error("Failed to fetch project data:", error);
	project = null;
}

if (!project) {
	return Astro.redirect('/404');
}
---

<PageLayout title={`Milestones & Goals - ${project?.name || project_id}`}>
	<div class="container mx-auto p-6">
		<div class="mb-6">
			<div class="flex items-center justify-between mb-4">
				<div>
					<h1 class="text-2xl font-bold text-gray-900 mb-2">Milestones & Goals</h1>
					<p class="text-gray-600">Organize your project tasks into milestones and goals for better tracking.</p>
				</div>
				<a 
					href={`/project/${project_id}`}
					class="bg-gray-100 hover:bg-gray-200 text-gray-700 px-4 py-2 rounded-lg transition-colors"
				>
					‚Üê Back to Project
				</a>
			</div>
		</div>

		<div id="milestones-container" class="space-y-6">
			<!-- Milestones will be loaded here by client-side component -->
		</div>

		<!-- Add new milestone button -->
		<button 
			id="add-milestone-btn"
			class="mt-6 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors"
		>
			+ Add Milestone
		</button>
	</div>

	<script>
		import MilestonesManager from '@/components/solid/MilestonesManager';
		import { render } from 'solid-js/web';

		// Get project_id from URL
		const pathParts = window.location.pathname.split('/');
		const projectId = pathParts[pathParts.indexOf('project') + 1];

		// Wait for DOM to load
		document.addEventListener('DOMContentLoaded', () => {
			// Mount the Milestones Manager component
			const container = document.getElementById('milestones-container');
			if (container && projectId) {
				render(() => MilestonesManager({ projectId }), container);
			}
		});
	</script>
</PageLayout>
