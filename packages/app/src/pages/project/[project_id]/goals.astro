---
import { getServerApiClient } from "@/utils/api-client";
import PageLayout from "@/layouts/PageLayout.astro";
import ProjectLayout from "@/layouts/ProjectLayout.astro";
import MilestonesManager from "@/components/solid/MilestonesManager";
import { Project } from "@devpad/schema";

const { project_id } = Astro.params;
if (!project_id) return new Response(null, { status: 404, statusText: "Project not found" });

const user = Astro.locals.user;
if (!user) return new Response(null, { status: 401, statusText: "Unauthorized" });

const apiClient = getServerApiClient(Astro.locals);

let project: Project | null = null;
let milestones = [];
let goalsMap = {};
let error: string | null = null;
try {
	project = await apiClient.projects.getByName(project_id);
	if (!project) {
		error = "Project not found";
	} else if (project.owner_id !== user.id) {
		error = "Access denied";
	} else {
		milestones = await apiClient.milestones.getByProject(project.id);
		console.log("[SERVER] Successfully fetched milestones:", milestones);
		
		// Fetch goals for each milestone
		for (const milestone of milestones) {
			try {
				const goals = await apiClient.milestones.goals(milestone.id);
				goalsMap[milestone.id] = goals;
				console.log(`[SERVER] Successfully fetched ${goals.length} goals for milestone ${milestone.name}`);
			} catch (goalError) {
				console.error(`[SERVER] Failed to fetch goals for milestone ${milestone.id}:`, goalError);
				goalsMap[milestone.id] = [];
			}
		}
	}
} catch (err) {
	console.error("Failed to fetch project:", err);
	error = "Failed to fetch project";
}
if (error) return new Response(null, { status: 500, statusText: error });
if (!project) return new Response(null, { status: 404, statusText: "Project not found" });
---

<PageLayout title={`Milestones & Goals - ${project_id}`}>
	<ProjectLayout project_id={project_id}>
		<h5>project goals</h5>
		<MilestonesManager projectId={project.id} projectSlug={project_id} initialMilestones={milestones} initialGoalsMap={goalsMap} client:load />
	</ProjectLayout>
</PageLayout>
