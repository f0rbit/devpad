---
import { getServerApiClient } from "@/utils/api-client";
import PageLayout from "@/layouts/PageLayout.astro";
import ProjectLayout from "@/layouts/ProjectLayout.astro";
import { Project } from "@devpad/schema";

const { project_id } = Astro.params;
if (!project_id) return new Response(null, { status: 404, statusText: "Project not found" });

const user = Astro.locals.user;
if (!user) return new Response(null, { status: 401, statusText: "Unauthorized" });

const apiClient = getServerApiClient(Astro.locals);

let project: Project | null = null;
let error: string | null = null;

try {
	project = await apiClient.projects.getByName(project_id);
	if (!project) {
		error = "Project not found";
	} else if (project.owner_id !== user.id) {
		error = "Access denied";
	}
} catch (err) {
	console.error("Failed to fetch project:", err);
	error = "Failed to fetch project";
}

if (error) return new Response(null, { status: 500, statusText: error });
if (!project) return new Response(null, { status: 404, statusText: "Project not found" });
---

<PageLayout title={`New Milestone - ${project_id}`}>
	<ProjectLayout project_id={project_id}>
		<h5>create milestone</h5>
		<section id="milestone-form" data-project-id={project.id}>
			<div class="flex-row">
				<label for="name">name</label>
				<input id="name" type="text" placeholder="Milestone name" required />
			</div>

			<div class="flex-row">
				<label for="description">description</label>
				<textarea id="description" placeholder="Optional description" rows={3}></textarea>
			</div>

			<div class="flex-row">
				<label for="target-version">target version</label>
				<input id="target-version" type="text" placeholder="e.g., v1.0.0" />
			</div>

			<div class="flex-row">
				<label for="target-time">target date</label>
				<input id="target-time" type="datetime-local" />
			</div>

			<div class="flex-row">
				<a role="button" id="submit-milestone">Create Milestone</a>
				<a role="button" id="cancel-milestone">Cancel</a>
			</div>

			<div>
				<p id="error" style="color: red;"></p>
			</div>
		</section>
	</ProjectLayout>
</PageLayout>

<script>
	import { getApiClient } from "@/utils/api-client";

	async function createMilestone() {
		const errorEl = document.getElementById("error") as HTMLParagraphElement;
		errorEl.innerText = "";

		const getValue = (id: string) => {
			return (document.getElementById(id) as HTMLInputElement | HTMLTextAreaElement)?.value?.trim() || null;
		};

		const name = getValue("name");
		const description = getValue("description");
		const target_version = getValue("target-version");
		const target_time = getValue("target-time");
		
		if (!name) {
			errorEl.innerText = "Milestone name is required";
			return;
		}

		const projectId = document.getElementById("milestone-form")?.dataset.projectId;
		if (!projectId) {
			errorEl.innerText = "Project ID not found";
			return;
		}

		try {
			const apiClient = getApiClient();
			await apiClient.milestones.create({
				project_id: projectId,
				name,
				description,
				target_version,
				target_time,
			});

			// Navigate back to goals page
			const projectSlug = window.location.pathname.split('/')[2];
			window.location.href = `/project/${projectSlug}/goals`;
		} catch (error) {
			console.error("Failed to create milestone:", error);
			errorEl.innerText = "Failed to create milestone";
		}
	}

	function cancelMilestone() {
		const projectSlug = window.location.pathname.split('/')[2];
		window.location.href = `/project/${projectSlug}/goals`;
	}

	document.getElementById("submit-milestone")?.addEventListener("click", createMilestone);
	document.getElementById("cancel-milestone")?.addEventListener("click", cancelMilestone);
</script>