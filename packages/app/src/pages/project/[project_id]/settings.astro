---
import { getServerApiClient, rethrow } from "@/utils/api-client";
import PageLayout from "../../../layouts/PageLayout.astro";
import ProjectLayout from "../../../layouts/ProjectLayout.astro";
import ProjectSettings from "../../../components/ProjectSettings.astro";
import ConfigEditor from "../../../components/solid/ConfigEditor";
import { TagWithTypedColor } from "@devpad/schema";

const { project_id } = Astro.params;
if (!project_id) return new Response(null, { status: 404, statusText: "Project not found" });

const user = Astro.locals.user;
if (!user) return new Response(null, { status: 401, statusText: "Unauthorized" });

const apiClient = getServerApiClient(Astro.locals);

const { project, error: projectError } = await apiClient.projects.getByName(project_id);
if (projectError) return rethrow(projectError);
if (!project) return new Response(null, { status: 404, statusText: "Project not found" });
if (project.owner_id !== user.id) return new Response(null, { status: 401, statusText: "Access denied" });

const { config, error: configError } = await apiClient.projects.config.load(project.id);
if (configError) return rethrow(configError);

const [owner, repo] = project.repo_url ? project.repo_url.split("/").slice(-2) : [null, null];

let branches: any[] | null = null;
if (owner && repo) {
	const { branches: fetchedBranches, error: branchesError } = await apiClient.github.branches(owner, repo);
	if (!branchesError) {
		branches = fetchedBranches;
	}
	// Continue with null branches if there's an error - this is not a critical failure
}

const { tags: available_tags, error: tags_error } = await apiClient.tags.list();
if (tags_error) return rethrow(tags_error);
---

<PageLayout title={`Settings - ${project_id}`}>
	<ProjectLayout project_id={project_id}>
		<div class="flex-col" style="gap: 5px">
			<h5>project settings</h5>
			<ProjectSettings project={project} />
			<br />
			<h5>scanning settings</h5>
			<ConfigEditor id={project.id} config={config.config} branches={branches} scan_branch={project.scan_branch} user_tags={available_tags} client:load />
		</div>
	</ProjectLayout>
</PageLayout>
