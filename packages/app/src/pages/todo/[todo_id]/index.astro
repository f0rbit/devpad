---
import { getTaskHistory } from "../../../server/action";
import { getUserProjectMap } from "../../../server/projects";
import { getActiveUserTags } from "../../../server/tags";
import { getTask } from "../../../server/tasks";

const { todo_id } = Astro.params;
if (!todo_id) return new Response(null, { status: 404, statusText: "Task not found" });

const user = Astro.locals.user;
if (!user) return new Response(null, { status: 401, statusText: "Unauthorized" });

const found = await getTask(todo_id);
if (!found || !found.task) return new Response(null, { status: 404, statusText: "Task not found" });

const { tags } = found;

if (found.task.owner_id !== user.id) return new Response(null, { status: 401, statusText: "Unauthorized" });

const user_tags = await getActiveUserTags(user.id);

const _project_map = await getUserProjectMap(user.id);

// tags contains the TagLink, we construct a map of tag_id to Tag & pass to TagPicker
const tag_map = new Map(user_tags.map(t => [t.id, t]));
const _current_tags = tags.map(tag_id => tag_map.get(tag_id)!) ?? [];

const _task_history = await getTaskHistory(todo_id);
---

<PageLayout title={`${found.task?.title ?? "New Task"} - devpad`}>
	<main>
		<TaskEditor task={found} user_tags={user_tags} current_tags={current_tags.filter(Boolean)} history={task_history} user_id={user.id} project_map={project_map} client:load />
	</main>
</PageLayout>
