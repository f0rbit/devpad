---
import Layout from "./Layout.astro";
interface Props {
	title: string;
}
const user = Astro.locals.user;

const { title } = Astro.props;

const pages = [
	{ name: "home", href: "/" },
	{ name: "projects", href: "/project" },
	{ name: "tasks", href: "/todo" },
	{ name: "account", href: "/account" },
	{ name: "login", href: "/api/auth/login" },
];

if (user) {
	pages.splice(4, 1);
} else {
	pages.splice(3, 1);
}

// get the active page (excluding home)
const search_pages = pages.filter((p) => p.href != "/");
const active = search_pages.find((p) => Astro.url.pathname.startsWith(p.href))?.name ?? "home";
---

<Layout title={title}>
	<body>
		<div id="container">
			<header>
				<h5 class="flex-row">
					<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-notebook-pen"><path d="M13.4 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-7.4"/><path d="M2 6h4"/><path d="M2 10h4"/><path d="M2 14h4"/><path d="M2 18h4"/><path d="M21.378 5.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"/></svg>
					<span>devpad</span>
				</h5>
				<nav>
					{
						pages.map((p) => (
							<a href={p.href} class={active == p.name ? "active" : ""}>
								{p.name}
							</a>
						))
					}
				</nav>
			</header>
			<br />
			<slot />
		</div>
		<br />
		<br />
		<footer>
			<p>Â© 2024 devpad</p>
		</footer>
	</body>
</Layout>
