---
import { Code } from "astro:components";
import PageLayout from "../layouts/PageLayout.astro";
---

<PageLayout title="devpad">
	<h3>API</h3>
	<div class="flex-col" style="gap: 5px;">
		<span>The API is available at <a href="https://devpad.tools/api/v0">devpad.tools/api/v0</a></span>
		<span>You should put an <code>API_KEY</code> in the <code>Authorization</code> header for each request in this format:</span>
		<Code code={`Authorization: Bearer <API_KEY>`} lang="http" />
		<span>API keys are generated on the <a href="/account">account</a> page.</span>
  </div>
	<br />
  <div class="flex-col">
    <section>
      <h4>projects</h4>
      <p>This endpoint fetches the data associated with each project. Note that only projects with <code>visibility == "PUBLIC"</code> will be returned in <code>/projects</code> (with no query params)</p>
      <div class="flex-col" style="gap: 10px;">
	    <div>
			<code>GET /projects</code>
			<ul style="padding-left: 20px;">
				<p class="flex-row"><code>200 - Array&ltProject&gt</code></p>
				<p class="flex-row"><code>401 - Unauthorized</code></p>
			</ul>
		</div>
		<div>
			<code>GET /projects?id=&ltstring&gt - id is project.id</code>
			<ul style="padding-left: 20px;">
				<p class="flex-row"><code>200 - Project</code></p>
				<p class="flex-row"><code>401 - Unauthorized</code></p>
				<p class="flex-row"><code>404 - Not Found</code></p>
				<p class="flex-row"><code>500 - Internal Server Error</code></p>
			</ul>		
		</div>
		<div>
			<code>GET /projects?name=&ltstring&gt - name is project.project_id</code>
			<ul style="padding-left: 20px;">
				<p class="flex-row"><code>200 - Project</code></p>
				<p class="flex-row"><code>401 - Unauthorized</code></p>
				<p class="flex-row"><code>404 - Not Found</code></p>
				<p class="flex-row"><code>500 - Internal Server Error</code></p>
			</ul>
		</div>
	  </div>

      <pre><Code code={`type Project = {
    id: string;
    project_id: string;
    owner_id: string;
    name: string;
    description: string | null;
    specification: string | null;
    repo_url: string | null;
    repo_id: string | null;
    icon_url: string | null;
    status: "DEVELOPMENT" | "PAUSED" | "RELEASED" | "LIVE" | "ABANDONED" | "STOPPED";
    deleted: boolean;
    link_url: string | null;
    link_text: string | null;
    visibility: "PUBLIC" | "PRIVATE" | "HIDDEN" | "ARCHIVED" | "DRAFT" | "DELETED";
    current_version: string | null;
    scan_branch: string | null;
};`} lang="ts" /></pre>
    </section>
    <section>
      <h4>GET /tasks</h4>
      <p>This endpoint retrieves task information. It accepts the following optional query parameters:</p>
      <ul>
        <li><code>id</code>: The UUID of the task.</li>
        <li><code>tag</code>: The UUID of the tag.</li>
        <li><code>project</code>: The UUID of the project.</li>
      </ul>
      <p>Depending on the provided parameters, the endpoint will:</p>
      <ul>
        <li>Return a specific task if <code>id</code> is provided.</li>
        <li>Return tasks associated with a specific tag if <code>tag</code> is provided.</li>
        <li>Return tasks associated with a specific project if <code>project</code> is provided.</li>
        <li>Return all tasks for the authenticated user if no parameters are provided.</li>
      </ul>
      <pre><Code code={`type Task = {
  id: string;
  project_id: string;
  owner_id: string;
  title: string;
  description: string;
  start_time: string | null;
  end_time: string | null;
  priority: "LOW" | "MEDIUM" | "HIGH";
  visibility: "PUBLIC" | "PRIVATE" | "HIDDEN" | "ARCHIVED" | "DRAFT" | "DELETED";
  tags: string[];
  // ...other fields
};

type GetTaskResponse = Task | Task[];`} lang="ts" /></pre>
    </section>
  </div>
</PageLayout>

<style>
  .flex-col {
    display: flex;
    flex-direction: column;
    gap: 24px;
  }

  section {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
    gap: 2px;
  }

  li {
    margin-bottom: 5px;
  }

  ul li:last-child {
    margin-bottom: 0;
  }
</style>
