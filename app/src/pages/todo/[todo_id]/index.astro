---
import { getTask } from "../../../server/tasks";
import PageLayout from "../../../layouts/PageLayout.astro";

const { todo_id } = Astro.params;
const user = Astro.locals.user;

if (!todo_id) {
	return Astro.redirect("/todo");
}

const { task } = await getTask(todo_id) ?? { task: null };

if (!task) {
	return Astro.redirect("/todo");
}

if (!user || task.owner_id !== user.id) {
	return Astro.response.redirect("/todo");
}

const from = Astro.url.searchParams.get('from')! || '';
---

<PageLayout title={"Editing Task"}>
	<main>
		<h1>Edit Task</h1>
		<a href={from.length > 0 ? from : "/todo"}>back</a>
		<div class="editor" data-todo-id={todo_id} data-user-id={user.id}>
			<label for="title">Title</label>
			<input type="text" id="title" name="title" value={task.title.trim()} />
			<label for="summary">Summary</label>
			<input type="text" id="summary" name="summary" value={task.summary} />
			<label for="description">Description</label>
			<textarea id="description" name="description">{task.description}</textarea>
			<label for="progress">Progress</label>
			<select id="progress" name="progress" value={task.progress}> 
				<option value="UNSTARTED">Not Started</option>
				<option value="IN_PROGRESS">In Progress</option>
				<option value="COMPLETED">Completed</option>
			</select>
			<label for="visibility">Visibility</label>
			<select id="visibility" name="visibility" value={task.visibility}>
				<option value="PUBLIC">Public</option>
				<option value="PRIVATE">Private</option>
				<option value="HIDDEN">Hidden</option>
				<option value="ARCHIVED">Archived</option>
				<option value="DRAFT">Draft</option>
				<option value="DELETED">Deleted</option>
			</select>
			<label for="start_time">Start Time</label>
			<input type="datetime-local" id="start_time" name="start_time" value={task.start_time} />
			<label for="end_time">End Time</label>
			<input type="datetime-local" id="end_time" name="end_time" value={task.end_time} />
			<label for="priority">Priority</label>
			<select id="priority" name="priority">
				<option value="LOW" selected={task.priority === "LOW"}>Low</option>
				<option value="MEDIUM" selected={task.priority === "MEDIUM"}>Medium</option>
				<option value="HIGH" selected={task.priority === "HIGH"}>High</option>
			</select>
			<a href="#" id='save-button'>save</a>
		</div>
	</main>
</PageLayout>

<script>
	const saveButton = document.getElementById('save-button');
	const get_value = (id: string) => {
			return (document.getElementById(id) as HTMLInputElement | undefined)?.value ?? null;
		};
	saveButton!.addEventListener('click', async () => {
		const title = get_value('title') ?? "";
		const summary = get_value('summary') ?? null;
		const description = get_value('description') ?? null;
		const progress = get_value('progress') ?? "UNSTARTED";
		const visibility = get_value('visibility') ?? "PRIVATE";
		const start_time = get_value('start_time') ?? null;
		const end_time = get_value('end_time') ?? null;
		const priority = get_value('priority') ?? "LOW";


		const owner_id = document.querySelector('.editor')?.getAttribute('data-user-id') ?? null;
		const todo_id = document.querySelector('.editor')?.getAttribute('data-todo-id') ?? null;

		const response = await fetch(`/api/todo/upsert`, {
			method: 'PUT',
			headers: {
				'Content-Type': 'application/json'
			},
			body: JSON.stringify({
				id: todo_id,
				title,
				summary,
				description,
				progress,
				visibility,
				start_time,
				end_time,
				priority,
				owner_id
			})
		});

		if (response.ok) {
			alert('Task updated');
		} else {
			alert('Failed to update task');
		}

	});
</script>

