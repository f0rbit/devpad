---
import { getTask } from "../../../server/tasks";
import PageLayout from "../../../layouts/PageLayout.astro";
import { getActiveUserTags } from "../../../server/tags";
import { getTaskHistory } from "../../../server/action";
import TaskEditor from "../../../components/solid/TaskEditor";

const { todo_id } = Astro.params;
if (!todo_id)
  return new Response(null, { status: 404, statusText: "Task not found" });

const user = Astro.locals.user;
if (!user)
  return new Response(null, { status: 401, statusText: "Unauthorized" });

const found = await getTask(todo_id);
if (!found)
  return new Response(null, { status: 404, statusText: "Task not found" });

const { task, codebase_tasks, tags } = found;

if (task.owner_id !== user.id)
  return new Response(null, { status: 401, statusText: "Unauthorized" });

const user_tags = await getActiveUserTags(user.id);

// tags contains the TagLink, we construct a map of tag_id to Tag & pass to TagPicker
const tag_map = new Map(user_tags.map((t) => [t.id, t]));
const current_tags = tags.map((tag_id) => tag_map.get(tag_id)!) ?? [];

const task_history = await getTaskHistory(todo_id);
---

<PageLayout title={`${task?.title ?? "New Task"} - devpad`}>
  <main>
    <TaskEditor
      task={task}
      codebase_tasks={codebase_tasks}
      tags={tags}
      user_tags={user_tags}
	  current_tags={current_tags.filter(Boolean)}
      history={task_history}
      user_id={user.id}
	  client:load
    />
  </main>
</PageLayout>
