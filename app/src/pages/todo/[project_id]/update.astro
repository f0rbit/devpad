---
import TodoLayout from "../../../layouts/TodoLayout.astro";
import { getProject, getRecentUpdate } from "../../../server/projects.ts";

const { project_id } = Astro.params;
const user = Astro.locals.user;

const { project } = (await getProject(user?.id ?? null, project_id)) ?? null;

// get the most recent todo_update for the project and render it
// really struggled to get drizzle to do a join with 2 records from the same table, and db.execute() didn't exist???
const update = await getRecentUpdate(project);

const update_id = update?.id ?? null;
---

<TodoLayout title={`Codebase - ${project_id} - Update`}>
	<pre>{update?.data}</pre>
	<a href="#" id="approve">Approve</a>
	<a href="#" id="reject">Reject</a>
</TodoLayout>

<script is:inline define:vars={{ project_id, update_id }}>
	document.getElementById("approve")?.addEventListener("click", async (e) => {
		e.preventDefault();
		await fetch(`/api/project/scan?project_id=${project_id}`, {
			method: "POST",
			body: JSON.stringify({ approved: true, id: update_id }),
		});
		location.reload();
	});

	document.getElementById("reject")?.addEventListener("click", async (e) => {
		e.preventDefault();
		await fetch(`/api/project/scan?project_id=${project_id}`, {
			method: "POST",
			body: JSON.stringify({ approved: false, id: update_id }),
		});
		location.reload();
	});
</script>
