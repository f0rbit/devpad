---
import { db } from "../../../../../database/db";
import { todo_updates } from "../../../../../database/schema";
import { getProject, getRecentUpdate } from "../../../../server/projects.ts";
import PageLayout from "../../../../layouts/PageLayout.astro";
import UpdateDiff from "../../../../components/UpdateDiff.astro";
import { eq } from "drizzle-orm";
import ProjectTasksLayout from "../../../../layouts/ProjectTasksLayout.astro";

const { project_id } = Astro.params;
if (!project_id) return { error: { status: 404, message: "Project not found" } };
const user = Astro.locals.user;

const { project: found_project, error } = (await getProject(user?.id ?? null, project_id)) ?? null;
if (error) return { error: { status: 500, message: error } };
if (!found_project) return { error: { status: 404, message: "Project not found" } };

const project_uuid = found_project.id;

// get the most recent todo_update for the project and render it
// really struggled to get drizzle to do a join with 2 records from the same table, and db.execute() didn't exist???
const update = await getRecentUpdate(found_project);
const update_id = update?.id ?? null;
const update_data = update?.data ? JSON.parse(update.data) : null;
---

<PageLayout title={`Codebase - ${project_id} - Update`}>
	<ProjectTasksLayout project_id={project_id}>
		{
			update_data ? (
				<>
					<UpdateDiff update={update_data} />
					<a href="#" id="approve">
						Approve
					</a>
					<a href="#" id="reject">
						Reject
					</a>
				</>
			) : (
				<p>No updates</p>
			)
		}
	</ProjectTasksLayout>
</PageLayout>

<script is:inline define:vars={{ project_uuid, update_id }}>
	const url = `/api/project/scan_status?project_id=${project_uuid}`;
	const accept = async (approve) => {
		if (event) event.preventDefault();
		await fetch(url, {
			method: "POST",
			body: JSON.stringify({ approved: approve, id: update_id }),
		});
		location.reload();
	};
	document.getElementById("approve")?.addEventListener("click", () => accept(true));
	document.getElementById("reject")?.addEventListener("click", () => accept(false));
</script>
