---
import ConfigEditor from "../../../../components/solid/ConfigEditor";
import PageLayout from "../../../../layouts/PageLayout.astro";
import ProjectTasksLayout from "../../../../layouts/ProjectTasksLayout.astro";
import { getBranches } from "../../../../server/github";
import { getProject, getProjectConfig } from "../../../../server/projects";

const { project_id } = Astro.params;
if (!project_id) return new Response(null, { status: 404, statusText: "Project not found" });

const user = Astro.locals.user;
if (!user) return new Response(null, { status: 401, statusText: "Unauthorized" });

const { project, error: project_error } = await getProject(user.id, project_id);
if (project_error) return new Response(null, { status: 500, statusText: error });
if (!project) return new Response(null, { status: 404, statusText: "Project not found" });

const { config, error: config_error } = await getProjectConfig(project.id);
if (config_error) return new Response(null, { status: 500, statusText: error });
if (!config) return new Response(null, { status: 404, statusText: "Config not found" });

const [owner, repo] = project.repo_url
  ? project.repo_url.split("/").slice(-2)
  : [null, null];

let branches: any[] | null = null;
if (owner && repo) {
  if (Astro.locals.session?.access_token) {
    branches = await getBranches(
      owner,
      repo,
      Astro.locals.session.access_token,
    );
  }
}
---

<PageLayout title={"Project Config"}>
  <ProjectTasksLayout project_id={project_id}>
    <ConfigEditor
      id={project.id}
      config={config}
      branches={branches}
      scan_branch={project.scan_branch}
      client:load
    />
  </ProjectTasksLayout>
</PageLayout>
