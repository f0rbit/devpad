---
import { getProjectTasks } from "../../../../server/tasks";
import PageLayout from "../../../../layouts/PageLayout.astro";
import {
  getProject,
  getUserProjects,
  type Project,
} from "../../../../server/projects";
import ProjectTasksLayout from "../../../../layouts/ProjectTasksLayout.astro";
import { getActiveUserTags, getUserTags } from "../../../../server/tags";
import { TaskSorter } from "../../../../components/solid/TaskSorter";

const { project_id } = Astro.params;
if (!project_id)
  return new Response(null, { status: 404, statusText: "Project not found" });
const user = Astro.locals.user;
if (!user)
  return new Response(null, { status: 401, statusText: "Unauthorized" });

const project_map = {} as Record<string, Project>;

const { project, error } = await getProject(user.id, project_id);
if (error) return new Response(null, { status: 500, statusText: error });
if (!project)
  return new Response(null, { status: 404, statusText: "Project not found" });

project_map[project.id] = project;
const project_uuid = project.id;

const tasks = await getProjectTasks(project_uuid);
const tags = await getActiveUserTags(user.id);
---

<PageLayout title={`Tasks - ${project_id}`}>
  <ProjectTasksLayout project_id={project_id}>
    <TaskSorter
      tasks={tasks}
      project_map={project_map}
      defaultOption={"priority"}
      tags={tags}
      user_id={user.id}
      defaultView={user.task_view}
      client:load
    />
  </ProjectTasksLayout>
</PageLayout>
